{"ast":null,"code":"import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nexport default function Stepper(props) {\n  const {\n    steps,\n    initialStep\n  } = props;\n  const stepsKeys = Object.keys(steps);\n  const [CurrentStep, setCurrentStep] = useState(stepsKeys.indexOf(initialStep) > -1 ? initialStep : stepsKeys[0]);\n  const totalStep = stepsKeys.length;\n  const indexStep = stepsKeys.indexOf(CurrentStep);\n\n  function prevStep() {\n    if (+indexStep > 0) setCurrentStep(stepsKeys[indexStep - 1]);\n  }\n\n  function nextStep() {\n    if (+indexStep < totalStep) setCurrentStep(stepsKeys[indexStep + 1]);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.children(prevStep, nextStep, CurrentStep, steps));\n}\nStepper.propTypes = {\n  data: propTypes.object.isRequired,\n  initialStep: propTypes.string\n};\nexport { default as Numbering } from \"./Numbering\";\nexport { default as Meta } from \"./Meta\";\nexport { default as Controller } from \"./Controller\";\nexport { default as MainContent } from \"./MainContent\";","map":{"version":3,"sources":["C:/Users/USER/3D Objects/Frontend Source Code/src/elements/Stepper/index.js"],"names":["React","useState","propTypes","Stepper","props","steps","initialStep","stepsKeys","Object","keys","CurrentStep","setCurrentStep","indexOf","totalStep","length","indexStep","prevStep","nextStep","children","data","object","isRequired","string","default","Numbering","Meta","Controller","MainContent"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAyBF,KAA/B;AACA,QAAMG,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAlB;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAC5CM,SAAS,CAACK,OAAV,CAAkBN,WAAlB,IAAiC,CAAC,CAAlC,GAAsCA,WAAtC,GAAoDC,SAAS,CAAC,CAAD,CADjB,CAA9C;AAGA,QAAMM,SAAS,GAAGN,SAAS,CAACO,MAA5B;AACA,QAAMC,SAAS,GAAGR,SAAS,CAACK,OAAV,CAAkBF,WAAlB,CAAlB;;AAEA,WAASM,QAAT,GAAoB;AAClB,QAAI,CAACD,SAAD,GAAa,CAAjB,EAAoBJ,cAAc,CAACJ,SAAS,CAACQ,SAAS,GAAG,CAAb,CAAV,CAAd;AACrB;;AAED,WAASE,QAAT,GAAoB;AAClB,QAAI,CAACF,SAAD,GAAaF,SAAjB,EAA4BF,cAAc,CAACJ,SAAS,CAACQ,SAAS,GAAG,CAAb,CAAV,CAAd;AAC7B;;AAED,sBAAO,0CAAGX,KAAK,CAACc,QAAN,CAAeF,QAAf,EAAyBC,QAAzB,EAAmCP,WAAnC,EAAgDL,KAAhD,CAAH,CAAP;AACD;AAEDF,OAAO,CAACD,SAAR,GAAoB;AAClBiB,EAAAA,IAAI,EAAEjB,SAAS,CAACkB,MAAV,CAAiBC,UADL;AAElBf,EAAAA,WAAW,EAAEJ,SAAS,CAACoB;AAFL,CAApB;AAKA,SAASC,OAAO,IAAIC,SAApB,QAAqC,aAArC;AACA,SAASD,OAAO,IAAIE,IAApB,QAAgC,QAAhC;AACA,SAASF,OAAO,IAAIG,UAApB,QAAsC,cAAtC;AACA,SAASH,OAAO,IAAII,WAApB,QAAuC,eAAvC","sourcesContent":["import React, { useState } from \"react\";\n\nimport propTypes from \"prop-types\";\n\nexport default function Stepper(props) {\n  const { steps, initialStep } = props;\n  const stepsKeys = Object.keys(steps);\n\n  const [CurrentStep, setCurrentStep] = useState(\n    stepsKeys.indexOf(initialStep) > -1 ? initialStep : stepsKeys[0]\n  );\n  const totalStep = stepsKeys.length;\n  const indexStep = stepsKeys.indexOf(CurrentStep);\n\n  function prevStep() {\n    if (+indexStep > 0) setCurrentStep(stepsKeys[indexStep - 1]);\n  }\n\n  function nextStep() {\n    if (+indexStep < totalStep) setCurrentStep(stepsKeys[indexStep + 1]);\n  }\n\n  return <>{props.children(prevStep, nextStep, CurrentStep, steps)}</>;\n}\n\nStepper.propTypes = {\n  data: propTypes.object.isRequired,\n  initialStep: propTypes.string,\n};\n\nexport { default as Numbering } from \"./Numbering\";\nexport { default as Meta } from \"./Meta\";\nexport { default as Controller } from \"./Controller\";\nexport { default as MainContent } from \"./MainContent\";\n"]},"metadata":{},"sourceType":"module"}