{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\USER\\\\3D Objects\\\\Frontend Source Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import{DateRange}from\"react-date-range\";import\"./index.scss\";import\"react-date-range/dist/styles.css\";// main css file\nimport\"react-date-range/dist/theme/default.css\";// theme css file\nimport formatDate from\"utils/formatDate\";import iconCalendar from\"assets/images/icons/icon-calendar.svg\";export default function Date(props){var value=props.value,placeholder=props.placeholder,name=props.name;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShowed=_useState2[0],setIsShowed=_useState2[1];var datePickerChange=function datePickerChange(value){var target={target:{value:value.selection,name:name}};props.onChange(target);};useEffect(function(){document.addEventListener(\"mousedown\",handleClickOutside);return function(){document.removeEventListener(\"mousedown\",handleClickOutside);};});var refDate=useRef(null);var handleClickOutside=function handleClickOutside(event){if(refDate&&!refDate.current.contains(event.target)){setIsShowed(false);}};var check=function check(focus){focus.indexOf(1)<0&&setIsShowed(false);};var displayDate=\"\".concat(value.startDate?formatDate(value.startDate):\"\").concat(value.endDate?\" - \"+formatDate(value.endDate):\"\");return/*#__PURE__*/React.createElement(\"div\",{ref:refDate,className:[\"input-date mb-3\",props.outerClassName].join(\" \")},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-prepend bg-gray-900\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\"},/*#__PURE__*/React.createElement(\"img\",{src:iconCalendar,alt:\"icon calendar\"}))),/*#__PURE__*/React.createElement(\"input\",{readOnly:true,type:\"text\",className:\"form-control\",value:displayDate,placeholder:placeholder,onClick:function onClick(){return setIsShowed(!isShowed);}}),isShowed&&/*#__PURE__*/React.createElement(\"div\",{className:\"date-range-wrapper\"},/*#__PURE__*/React.createElement(DateRange,{editableDateInputs:true,onChange:datePickerChange,moveRangeOnFirstSelection:false,onRangeFocusChange:check,ranges:[value]}))));}","map":{"version":3,"sources":["C:/Users/USER/3D Objects/Frontend Source Code/src/elements/Form/InputDate/index.js"],"names":["React","useState","useRef","useEffect","DateRange","formatDate","Date","props","value","placeholder","name","isShowed","setIsShowed","datePickerChange","target","selection","onChange","document","addEventListener","handleClickOutside","removeEventListener","refDate","event","current","contains","check","focus","indexOf","displayDate","startDate","endDate","outerClassName","join","iconCalendar"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\n\nimport { DateRange } from \"react-date-range\";\n\nimport \"./index.scss\";\nimport \"react-date-range/dist/styles.css\"; // main css file\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\n\nimport formatDate from \"utils/formatDate\";\nimport iconCalendar from \"assets/images/icons/icon-calendar.svg\";\n\nexport default function Date(props) {\n  const { value, placeholder, name } = props;\n  const [isShowed, setIsShowed] = useState(false);\n\n  const datePickerChange = (value) => {\n    const target = {\n      target: {\n        value: value.selection,\n        name: name,\n      },\n    };\n    props.onChange(target);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const refDate = useRef(null);\n  const handleClickOutside = (event) => {\n    if (refDate && !refDate.current.contains(event.target)) {\n      setIsShowed(false);\n    }\n  };\n\n  const check = (focus) => {\n    focus.indexOf(1) < 0 && setIsShowed(false);\n  };\n\n  const displayDate = `${value.startDate ? formatDate(value.startDate) : \"\"}${\n    value.endDate ? \" - \" + formatDate(value.endDate) : \"\"\n  }`;\n\n  return (\n    <div\n      ref={refDate}\n      className={[\"input-date mb-3\", props.outerClassName].join(\" \")}\n    >\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend bg-gray-900\">\n          <span className=\"input-group-text\">\n            <img src={iconCalendar} alt=\"icon calendar\" />\n          </span>\n        </div>\n        <input\n          readOnly\n          type=\"text\"\n          className=\"form-control\"\n          value={displayDate}\n          placeholder={placeholder}\n          onClick={() => setIsShowed(!isShowed)}\n        />\n\n        {isShowed && (\n          <div className=\"date-range-wrapper\">\n            <DateRange\n              editableDateInputs={true}\n              onChange={datePickerChange}\n              moveRangeOnFirstSelection={false}\n              onRangeFocusChange={check}\n              ranges={[value]}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nDate.propTypes = {\n  value: propTypes.object,\n  onChange: propTypes.func,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}