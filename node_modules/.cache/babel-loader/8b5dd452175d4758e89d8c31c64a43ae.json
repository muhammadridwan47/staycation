{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\USER\\\\3D Objects\\\\Frontend Source Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./index.scss\";export default function Number(props){var value=props.value,placeholder=props.placeholder,name=props.name,min=props.min,max=props.max,prefix=props.prefix,suffix=props.suffix;var _useState=useState(\"\".concat(prefix).concat(value).concat(suffix)),_useState2=_slicedToArray(_useState,2),InputValue=_useState2[0],setInputValue=_useState2[1];var onChange=function onChange(e){var value=String(e.target.value);if(prefix)value=value.replace(prefix);if(suffix)value=value.replace(suffix);var patternNumeric=new RegExp(\"[0-9]*\");var isNumeric=patternNumeric.test(value);if(isNumeric&&+value<=max&&+value>=min){props.onChange({target:{name:name,value:+value}});setInputValue(\"\".concat(prefix).concat(value).concat(suffix));}};var minus=function minus(){value>min&&onChange({target:{name:name,value:+value-1}});};var plus=function plus(){value<max&&onChange({target:{name:name,value:+value+1}});};return/*#__PURE__*/React.createElement(\"div\",{className:[\"input-number mb-3\",props.outerClassName].join(\" \")},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text minus\",onClick:minus},\"-\")),/*#__PURE__*/React.createElement(\"input\",{min:min,max:max,name:name,pattern:\"[0-9]*\",className:\"form-control\",placeholder:placeholder?placeholder:\"0\",value:String(InputValue),onChange:onChange}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text plus\",onClick:plus},\"+\"))));}Number.defaultProps={min:1,max:1,prefix:\"\",suffix:\"\"};","map":{"version":3,"sources":["C:/Users/USER/3D Objects/Frontend Source Code/src/elements/Form/InputNumber/index.js"],"names":["React","useState","Number","props","value","placeholder","name","min","max","prefix","suffix","InputValue","setInputValue","onChange","e","String","target","replace","patternNumeric","RegExp","isNumeric","test","minus","plus","outerClassName","join","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./index.scss\";\n\nexport default function Number(props) {\n  const { value, placeholder, name, min, max, prefix, suffix } = props;\n\n  const [InputValue, setInputValue] = useState(`${prefix}${value}${suffix}`);\n\n  const onChange = (e) => {\n    let value = String(e.target.value);\n    if (prefix) value = value.replace(prefix);\n    if (suffix) value = value.replace(suffix);\n\n    const patternNumeric = new RegExp(\"[0-9]*\");\n    const isNumeric = patternNumeric.test(value);\n\n    if (isNumeric && +value <= max && +value >= min) {\n      props.onChange({\n        target: {\n          name: name,\n          value: +value,\n        },\n      });\n      setInputValue(`${prefix}${value}${suffix}`);\n    }\n  };\n\n  const minus = () => {\n    value > min &&\n      onChange({\n        target: {\n          name: name,\n          value: +value - 1,\n        },\n      });\n  };\n  const plus = () => {\n    value < max &&\n      onChange({\n        target: {\n          name: name,\n          value: +value + 1,\n        },\n      });\n  };\n  return (\n    <div className={[\"input-number mb-3\", props.outerClassName].join(\" \")}>\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text minus\" onClick={minus}>\n            -\n          </span>\n        </div>\n        <input\n          min={min}\n          max={max}\n          name={name}\n          pattern=\"[0-9]*\"\n          className=\"form-control\"\n          placeholder={placeholder ? placeholder : \"0\"}\n          value={String(InputValue)}\n          onChange={onChange}\n        />\n        <div className=\"input-group-append\">\n          <span className=\"input-group-text plus\" onClick={plus}>\n            +\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nNumber.defaultProps = {\n  min: 1,\n  max: 1,\n  prefix: \"\",\n  suffix: \"\",\n};\n\nNumber.propTypes = {\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]),\n  onChange: propTypes.func,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}