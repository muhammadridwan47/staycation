{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\3D Objects\\\\Frontend Source Code\\\\src\\\\elements\\\\Form\\\\InputText\\\\index.js\";\nimport React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./index.scss\";\nexport default function Text(props) {\n  const {\n    value,\n    type,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n    errorResponse\n  } = props;\n  const [HasError, setHasError] = useState(null);\n  let pattern = \"\";\n  if (type === \"email\") pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (type === \"tel\") pattern = \"[0-9]*\";\n\n  const onChange = event => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value\n      }\n    };\n\n    if (type === \"email\") {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse);else setHasError(null);\n    }\n\n    if (type === \"tel\") {\n      if (event.target.validity.valid) props.onChange(target);\n    } else {\n      props.onChange(target);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: [\"input-text mb-3\", outerClassName].join(\" \")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\"\n  }, prepend && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend bg-gray-900\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\"\n  }, prepend)), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    pattern: pattern,\n    className: [\"form-control\", inputClassName].join(\" \"),\n    value: value,\n    placeholder: placeholder,\n    onChange: onChange\n  }), append && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append bg-gray-900\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\"\n  }, append))), HasError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-helper\"\n  }, HasError));\n}\nText.defaultProps = {\n  type: \"text\",\n  pattern: \"\",\n  placeholder: \"Please type here...\",\n  errorResponse: \"Please match the requested format.\"\n};\nText.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  type: propTypes.string,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string\n};","map":{"version":3,"sources":["C:/Users/USER/3D Objects/Frontend Source Code/src/elements/Form/InputText/index.js"],"names":["React","useState","propTypes","Text","props","value","type","placeholder","name","prepend","append","outerClassName","inputClassName","errorResponse","HasError","setHasError","pattern","onChange","event","target","test","validity","valid","join","defaultProps","string","isRequired","oneOfType","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA,cARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAYA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,MAAIe,OAAO,GAAG,EAAd;AACA,MAAIV,IAAI,KAAK,OAAb,EAAsBU,OAAO,GAAG,4BAAV;AACtB,MAAIV,IAAI,KAAK,KAAb,EAAoBU,OAAO,GAAG,QAAV;;AAEpB,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAMC,MAAM,GAAG;AACbA,MAAAA,MAAM,EAAE;AACNX,QAAAA,IAAI,EAAEA,IADA;AAENH,QAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAad;AAFd;AADK,KAAf;;AAOA,QAAIC,IAAI,KAAK,OAAb,EAAsB;AACpB,UAAI,CAACU,OAAO,CAACI,IAAR,CAAaF,KAAK,CAACC,MAAN,CAAad,KAA1B,CAAL,EAAuCU,WAAW,CAACF,aAAD,CAAX,CAAvC,KACKE,WAAW,CAAC,IAAD,CAAX;AACN;;AAED,QAAIT,IAAI,KAAK,KAAb,EAAoB;AAClB,UAAIY,KAAK,CAACC,MAAN,CAAaE,QAAb,CAAsBC,KAA1B,EAAiClB,KAAK,CAACa,QAAN,CAAeE,MAAf;AAClC,KAFD,MAEO;AACLf,MAAAA,KAAK,CAACa,QAAN,CAAeE,MAAf;AACD;AACF,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAE,CAAC,iBAAD,EAAoBR,cAApB,EAAoCY,IAApC,CAAyC,GAAzC;AAAhB,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGd,OAAO,iBACN;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAoCA,OAApC,CADF,CAFJ,eAME;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,OAAO,EAAEU,OAHX;AAIE,IAAA,SAAS,EAAE,CAAC,cAAD,EAAiBJ,cAAjB,EAAiCW,IAAjC,CAAsC,GAAtC,CAJb;AAKE,IAAA,KAAK,EAAElB,KALT;AAME,IAAA,WAAW,EAAEE,WANf;AAOE,IAAA,QAAQ,EAAEU;AAPZ,IANF,EAeGP,MAAM,iBACL;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAoCA,MAApC,CADF,CAhBJ,CADF,EAsBGI,QAAQ,iBAAI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAgCA,QAAhC,CAtBf,CADF;AA0BD;AAEDX,IAAI,CAACqB,YAAL,GAAoB;AAClBlB,EAAAA,IAAI,EAAE,MADY;AAElBU,EAAAA,OAAO,EAAE,EAFS;AAGlBT,EAAAA,WAAW,EAAE,qBAHK;AAIlBM,EAAAA,aAAa,EAAE;AAJG,CAApB;AAOAV,IAAI,CAACD,SAAL,GAAiB;AACfM,EAAAA,IAAI,EAAEN,SAAS,CAACuB,MAAV,CAAiBC,UADR;AAEfrB,EAAAA,KAAK,EAAEH,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC0B,MAAX,EAAmB1B,SAAS,CAACuB,MAA7B,CAApB,EAA0DC,UAFlD;AAGfT,EAAAA,QAAQ,EAAEf,SAAS,CAAC2B,IAAV,CAAeH,UAHV;AAIfjB,EAAAA,OAAO,EAAEP,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC0B,MAAX,EAAmB1B,SAAS,CAACuB,MAA7B,CAApB,CAJM;AAKff,EAAAA,MAAM,EAAER,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC0B,MAAX,EAAmB1B,SAAS,CAACuB,MAA7B,CAApB,CALO;AAMfnB,EAAAA,IAAI,EAAEJ,SAAS,CAACuB,MAND;AAOflB,EAAAA,WAAW,EAAEL,SAAS,CAACuB,MAPR;AAQfd,EAAAA,cAAc,EAAET,SAAS,CAACuB,MARX;AASfb,EAAAA,cAAc,EAAEV,SAAS,CAACuB;AATX,CAAjB","sourcesContent":["import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\n\nimport \"./index.scss\";\n\nexport default function Text(props) {\n  const {\n    value,\n    type,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n    errorResponse,\n  } = props;\n\n  const [HasError, setHasError] = useState(null);\n  let pattern = \"\";\n  if (type === \"email\") pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (type === \"tel\") pattern = \"[0-9]*\";\n\n  const onChange = (event) => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value,\n      },\n    };\n\n    if (type === \"email\") {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse);\n      else setHasError(null);\n    }\n\n    if (type === \"tel\") {\n      if (event.target.validity.valid) props.onChange(target);\n    } else {\n      props.onChange(target);\n    }\n  };\n\n  return (\n    <div className={[\"input-text mb-3\", outerClassName].join(\" \")}>\n      <div className=\"input-group\">\n        {prepend && (\n          <div className=\"input-group-prepend bg-gray-900\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n        <input\n          name={name}\n          type={type}\n          pattern={pattern}\n          className={[\"form-control\", inputClassName].join(\" \")}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n        {append && (\n          <div className=\"input-group-append bg-gray-900\">\n            <span className=\"input-group-text\">{append}</span>\n          </div>\n        )}\n      </div>\n      {HasError && <span className=\"error-helper\">{HasError}</span>}\n    </div>\n  );\n}\n\nText.defaultProps = {\n  type: \"text\",\n  pattern: \"\",\n  placeholder: \"Please type here...\",\n  errorResponse: \"Please match the requested format.\",\n};\n\nText.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  type: propTypes.string,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}