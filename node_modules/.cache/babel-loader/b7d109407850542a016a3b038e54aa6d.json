{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\USER\\\\3D Objects\\\\Frontend Source Code\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./index.scss\";export default function Text(props){var value=props.value,type=props.type,placeholder=props.placeholder,name=props.name,prepend=props.prepend,append=props.append,outerClassName=props.outerClassName,inputClassName=props.inputClassName,errorResponse=props.errorResponse;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),HasError=_useState2[0],setHasError=_useState2[1];var pattern=\"\";if(type===\"email\")pattern=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(type===\"tel\")pattern=\"[0-9]*\";var onChange=function onChange(event){var target={target:{name:name,value:event.target.value}};if(type===\"email\"){if(!pattern.test(event.target.value))setHasError(errorResponse);else setHasError(null);}if(type===\"tel\"){if(event.target.validity.valid)props.onChange(target);}else{props.onChange(target);}};return/*#__PURE__*/React.createElement(\"div\",{className:[\"input-text mb-3\",outerClassName].join(\" \")},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},prepend&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-prepend bg-gray-900\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\"},prepend)),/*#__PURE__*/React.createElement(\"input\",{name:name,type:type,pattern:pattern,className:[\"form-control\",inputClassName].join(\" \"),value:value,placeholder:placeholder,onChange:onChange}),append&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append bg-gray-900\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\"},append))),HasError&&/*#__PURE__*/React.createElement(\"span\",{className:\"error-helper\"},HasError));}Text.defaultProps={type:\"text\",pattern:\"\",placeholder:\"Please type here...\",errorResponse:\"Please match the requested format.\"};","map":{"version":3,"sources":["C:/Users/USER/3D Objects/Frontend Source Code/src/elements/Form/InputText/index.js"],"names":["React","useState","Text","props","value","type","placeholder","name","prepend","append","outerClassName","inputClassName","errorResponse","HasError","setHasError","pattern","onChange","event","target","test","validity","valid","join","defaultProps"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAGA,MAAO,cAAP,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,IAEhCC,CAAAA,KAFgC,CAW9BD,KAX8B,CAEhCC,KAFgC,CAGhCC,IAHgC,CAW9BF,KAX8B,CAGhCE,IAHgC,CAIhCC,WAJgC,CAW9BH,KAX8B,CAIhCG,WAJgC,CAKhCC,IALgC,CAW9BJ,KAX8B,CAKhCI,IALgC,CAMhCC,OANgC,CAW9BL,KAX8B,CAMhCK,OANgC,CAOhCC,MAPgC,CAW9BN,KAX8B,CAOhCM,MAPgC,CAQhCC,cARgC,CAW9BP,KAX8B,CAQhCO,cARgC,CAShCC,cATgC,CAW9BR,KAX8B,CAShCQ,cATgC,CAUhCC,aAVgC,CAW9BT,KAX8B,CAUhCS,aAVgC,eAaFX,QAAQ,CAAC,IAAD,CAbN,wCAa3BY,QAb2B,eAajBC,WAbiB,eAclC,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIV,IAAI,GAAK,OAAb,CAAsBU,OAAO,CAAG,4BAAV,CACtB,GAAIV,IAAI,GAAK,KAAb,CAAoBU,OAAO,CAAG,QAAV,CAEpB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,MAAM,CAAG,CACbA,MAAM,CAAE,CACNX,IAAI,CAAEA,IADA,CAENH,KAAK,CAAEa,KAAK,CAACC,MAAN,CAAad,KAFd,CADK,CAAf,CAOA,GAAIC,IAAI,GAAK,OAAb,CAAsB,CACpB,GAAI,CAACU,OAAO,CAACI,IAAR,CAAaF,KAAK,CAACC,MAAN,CAAad,KAA1B,CAAL,CAAuCU,WAAW,CAACF,aAAD,CAAX,CAAvC,IACKE,CAAAA,WAAW,CAAC,IAAD,CAAX,CACN,CAED,GAAIT,IAAI,GAAK,KAAb,CAAoB,CAClB,GAAIY,KAAK,CAACC,MAAN,CAAaE,QAAb,CAAsBC,KAA1B,CAAiClB,KAAK,CAACa,QAAN,CAAeE,MAAf,EAClC,CAFD,IAEO,CACLf,KAAK,CAACa,QAAN,CAAeE,MAAf,EACD,CACF,CAlBD,CAoBA,mBACE,2BAAK,SAAS,CAAE,CAAC,iBAAD,CAAoBR,cAApB,EAAoCY,IAApC,CAAyC,GAAzC,CAAhB,eACE,2BAAK,SAAS,CAAC,aAAf,EACGd,OAAO,eACN,2BAAK,SAAS,CAAC,iCAAf,eACE,4BAAM,SAAS,CAAC,kBAAhB,EAAoCA,OAApC,CADF,CAFJ,cAME,6BACE,IAAI,CAAED,IADR,CAEE,IAAI,CAAEF,IAFR,CAGE,OAAO,CAAEU,OAHX,CAIE,SAAS,CAAE,CAAC,cAAD,CAAiBJ,cAAjB,EAAiCW,IAAjC,CAAsC,GAAtC,CAJb,CAKE,KAAK,CAAElB,KALT,CAME,WAAW,CAAEE,WANf,CAOE,QAAQ,CAAEU,QAPZ,EANF,CAeGP,MAAM,eACL,2BAAK,SAAS,CAAC,gCAAf,eACE,4BAAM,SAAS,CAAC,kBAAhB,EAAoCA,MAApC,CADF,CAhBJ,CADF,CAsBGI,QAAQ,eAAI,4BAAM,SAAS,CAAC,cAAhB,EAAgCA,QAAhC,CAtBf,CADF,CA0BD,CAEDX,IAAI,CAACqB,YAAL,CAAoB,CAClBlB,IAAI,CAAE,MADY,CAElBU,OAAO,CAAE,EAFS,CAGlBT,WAAW,CAAE,qBAHK,CAIlBM,aAAa,CAAE,oCAJG,CAApB","sourcesContent":["import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\n\nimport \"./index.scss\";\n\nexport default function Text(props) {\n  const {\n    value,\n    type,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n    errorResponse,\n  } = props;\n\n  const [HasError, setHasError] = useState(null);\n  let pattern = \"\";\n  if (type === \"email\") pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (type === \"tel\") pattern = \"[0-9]*\";\n\n  const onChange = (event) => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value,\n      },\n    };\n\n    if (type === \"email\") {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse);\n      else setHasError(null);\n    }\n\n    if (type === \"tel\") {\n      if (event.target.validity.valid) props.onChange(target);\n    } else {\n      props.onChange(target);\n    }\n  };\n\n  return (\n    <div className={[\"input-text mb-3\", outerClassName].join(\" \")}>\n      <div className=\"input-group\">\n        {prepend && (\n          <div className=\"input-group-prepend bg-gray-900\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n        <input\n          name={name}\n          type={type}\n          pattern={pattern}\n          className={[\"form-control\", inputClassName].join(\" \")}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n        {append && (\n          <div className=\"input-group-append bg-gray-900\">\n            <span className=\"input-group-text\">{append}</span>\n          </div>\n        )}\n      </div>\n      {HasError && <span className=\"error-helper\">{HasError}</span>}\n    </div>\n  );\n}\n\nText.defaultProps = {\n  type: \"text\",\n  pattern: \"\",\n  placeholder: \"Please type here...\",\n  errorResponse: \"Please match the requested format.\",\n};\n\nText.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  onChange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  type: propTypes.string,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}