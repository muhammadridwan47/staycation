{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\3D Objects\\\\Frontend Source Code\\\\src\\\\elements\\\\Form\\\\InputNumber\\\\index.js\";\nimport React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./index.scss\";\nexport default function Number(props) {\n  const {\n    value,\n    placeholder,\n    name,\n    min,\n    max,\n    prefix,\n    suffix\n  } = props;\n  const [InputValue, setInputValue] = useState(`${prefix}${value}${suffix}`);\n\n  const onChange = e => {\n    let value = String(e.target.value);\n    if (prefix) value = value.replace(prefix);\n    if (suffix) value = value.replace(suffix);\n    const patternNumeric = new RegExp(\"[0-9]*\");\n    const isNumeric = patternNumeric.test(value);\n\n    if (isNumeric && +value <= max && +value >= min) {\n      props.onChange({\n        target: {\n          name: name,\n          value: +value\n        }\n      });\n      setInputValue(`${prefix}${value}${suffix}`);\n    }\n  };\n\n  const minus = () => {\n    value > min && onChange({\n      target: {\n        name: name,\n        value: +value - 1\n      }\n    });\n  };\n\n  const plus = () => {\n    value < max && onChange({\n      target: {\n        name: name,\n        value: +value + 1\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: [\"input-number mb-3\", props.outerClassName].join(\" \")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text minus\",\n    onClick: minus\n  }, \"-\")), /*#__PURE__*/React.createElement(\"input\", {\n    min: min,\n    max: max,\n    name: name,\n    pattern: \"[0-9]*\",\n    className: \"form-control\",\n    placeholder: placeholder ? placeholder : \"0\",\n    value: String(InputValue),\n    onChange: onChange\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text plus\",\n    onClick: plus\n  }, \"+\"))));\n}\nNumber.defaultProps = {\n  min: 1,\n  max: 1,\n  prefix: \"\",\n  suffix: \"\"\n};\nNumber.propTypes = {\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]),\n  onChange: propTypes.func,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string\n};","map":{"version":3,"sources":["C:/Users/USER/3D Objects/Frontend Source Code/src/elements/Form/InputNumber/index.js"],"names":["React","useState","propTypes","Number","props","value","placeholder","name","min","max","prefix","suffix","InputValue","setInputValue","onChange","e","String","target","replace","patternNumeric","RegExp","isNumeric","test","minus","plus","outerClassName","join","defaultProps","oneOfType","string","number","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./index.scss\";\n\nexport default function Number(props) {\n  const { value, placeholder, name, min, max, prefix, suffix } = props;\n\n  const [InputValue, setInputValue] = useState(`${prefix}${value}${suffix}`);\n\n  const onChange = (e) => {\n    let value = String(e.target.value);\n    if (prefix) value = value.replace(prefix);\n    if (suffix) value = value.replace(suffix);\n\n    const patternNumeric = new RegExp(\"[0-9]*\");\n    const isNumeric = patternNumeric.test(value);\n\n    if (isNumeric && +value <= max && +value >= min) {\n      props.onChange({\n        target: {\n          name: name,\n          value: +value,\n        },\n      });\n      setInputValue(`${prefix}${value}${suffix}`);\n    }\n  };\n\n  const minus = () => {\n    value > min &&\n      onChange({\n        target: {\n          name: name,\n          value: +value - 1,\n        },\n      });\n  };\n  const plus = () => {\n    value < max &&\n      onChange({\n        target: {\n          name: name,\n          value: +value + 1,\n        },\n      });\n  };\n  return (\n    <div className={[\"input-number mb-3\", props.outerClassName].join(\" \")}>\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text minus\" onClick={minus}>\n            -\n          </span>\n        </div>\n        <input\n          min={min}\n          max={max}\n          name={name}\n          pattern=\"[0-9]*\"\n          className=\"form-control\"\n          placeholder={placeholder ? placeholder : \"0\"}\n          value={String(InputValue)}\n          onChange={onChange}\n        />\n        <div className=\"input-group-append\">\n          <span className=\"input-group-text plus\" onClick={plus}>\n            +\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nNumber.defaultProps = {\n  min: 1,\n  max: 1,\n  prefix: \"\",\n  suffix: \"\",\n};\n\nNumber.propTypes = {\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]),\n  onChange: propTypes.func,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}